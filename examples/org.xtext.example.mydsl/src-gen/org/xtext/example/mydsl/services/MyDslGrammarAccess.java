/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DomainModel");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsModelElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//DomainModel:
		//	elements+=ModelElement*;
		@Override public ParserRule getRule() { return rule; }

		//elements+=ModelElement*
		public Assignment getElementsAssignment() { return cElementsAssignment; }

		//ModelElement
		public RuleCall getElementsModelElementParserRuleCall_0() { return cElementsModelElementParserRuleCall_0; }
	}

	public class ModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLibraryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAuthorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBookParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ModelElement:
		//	Library | Author | Book;
		@Override public ParserRule getRule() { return rule; }

		//Library | Author | Book
		public Alternatives getAlternatives() { return cAlternatives; }

		//Library
		public RuleCall getLibraryParserRuleCall_0() { return cLibraryParserRuleCall_0; }

		//Author
		public RuleCall getAuthorParserRuleCall_1() { return cAuthorParserRuleCall_1; }

		//Book
		public RuleCall getBookParserRuleCall_2() { return cBookParserRuleCall_2; }
	}

	public class LibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Library");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLibraryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cGroup_3.eContents().get(0);
		private final Keyword cBookKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cBooksAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final CrossReference cBooksBookCrossReference_3_0_1_0 = (CrossReference)cBooksAssignment_3_0_1.eContents().get(0);
		private final RuleCall cBooksBookIDTerminalRuleCall_3_0_1_0_1 = (RuleCall)cBooksBookCrossReference_3_0_1_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cAuthorKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cAuthorsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cAuthorsAuthorCrossReference_3_1_1_0 = (CrossReference)cAuthorsAssignment_3_1_1.eContents().get(0);
		private final RuleCall cAuthorsAuthorIDTerminalRuleCall_3_1_1_0_1 = (RuleCall)cAuthorsAuthorCrossReference_3_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Library:
		//	"library" name=ID "{" (("book" books+=[Book])* ("author" authors+=[Author])*) "}";
		@Override public ParserRule getRule() { return rule; }

		//"library" name=ID "{" (("book" books+=[Book])* ("author" authors+=[Author])*) "}"
		public Group getGroup() { return cGroup; }

		//"library"
		public Keyword getLibraryKeyword_0() { return cLibraryKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("book" books+=[Book])* ("author" authors+=[Author])*
		public Group getGroup_3() { return cGroup_3; }

		//("book" books+=[Book])*
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"book"
		public Keyword getBookKeyword_3_0_0() { return cBookKeyword_3_0_0; }

		//books+=[Book]
		public Assignment getBooksAssignment_3_0_1() { return cBooksAssignment_3_0_1; }

		//[Book]
		public CrossReference getBooksBookCrossReference_3_0_1_0() { return cBooksBookCrossReference_3_0_1_0; }

		//ID
		public RuleCall getBooksBookIDTerminalRuleCall_3_0_1_0_1() { return cBooksBookIDTerminalRuleCall_3_0_1_0_1; }

		//("author" authors+=[Author])*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"author"
		public Keyword getAuthorKeyword_3_1_0() { return cAuthorKeyword_3_1_0; }

		//authors+=[Author]
		public Assignment getAuthorsAssignment_3_1_1() { return cAuthorsAssignment_3_1_1; }

		//[Author]
		public CrossReference getAuthorsAuthorCrossReference_3_1_1_0() { return cAuthorsAuthorCrossReference_3_1_1_0; }

		//ID
		public RuleCall getAuthorsAuthorIDTerminalRuleCall_3_1_1_0_1() { return cAuthorsAuthorIDTerminalRuleCall_3_1_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AuthorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Author");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAuthorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFullNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFullNameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cFullNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cBookKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cBooksAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cBooksBookCrossReference_3_2_1_0 = (CrossReference)cBooksAssignment_3_2_1.eContents().get(0);
		private final RuleCall cBooksBookIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cBooksBookCrossReference_3_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Author:
		//	"author" name=ID "{" ("name" fullName=STRING ("book" books+=[Book])*) "}";
		@Override public ParserRule getRule() { return rule; }

		//"author" name=ID "{" ("name" fullName=STRING ("book" books+=[Book])*) "}"
		public Group getGroup() { return cGroup; }

		//"author"
		public Keyword getAuthorKeyword_0() { return cAuthorKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"name" fullName=STRING ("book" books+=[Book])*
		public Group getGroup_3() { return cGroup_3; }

		//"name"
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }

		//fullName=STRING
		public Assignment getFullNameAssignment_3_1() { return cFullNameAssignment_3_1; }

		//STRING
		public RuleCall getFullNameSTRINGTerminalRuleCall_3_1_0() { return cFullNameSTRINGTerminalRuleCall_3_1_0; }

		//("book" books+=[Book])*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"book"
		public Keyword getBookKeyword_3_2_0() { return cBookKeyword_3_2_0; }

		//books+=[Book]
		public Assignment getBooksAssignment_3_2_1() { return cBooksAssignment_3_2_1; }

		//[Book]
		public CrossReference getBooksBookCrossReference_3_2_1_0() { return cBooksBookCrossReference_3_2_1_0; }

		//ID
		public RuleCall getBooksBookIDTerminalRuleCall_3_2_1_0_1() { return cBooksBookIDTerminalRuleCall_3_2_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class BookElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Book");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBookKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTitleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cTitleAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cPageKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cPagesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cPagesINTTerminalRuleCall_3_2_1_0 = (RuleCall)cPagesAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCategoryKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCategoryAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cCategoryBookCategoryEnumRuleCall_3_3_1_0 = (RuleCall)cCategoryAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cAuthorKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cAuthorsAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final CrossReference cAuthorsAuthorCrossReference_3_4_1_0 = (CrossReference)cAuthorsAssignment_3_4_1.eContents().get(0);
		private final RuleCall cAuthorsAuthorIDTerminalRuleCall_3_4_1_0_1 = (RuleCall)cAuthorsAuthorCrossReference_3_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Book:
		//	"book" name=ID "{" ("title" title=STRING ("page" pages=INT)? ("category" category=BookCategory)? ("author"
		//	authors+=[Author])*) "}";
		@Override public ParserRule getRule() { return rule; }

		//"book" name=ID "{" ("title" title=STRING ("page" pages=INT)? ("category" category=BookCategory)? ("author"
		//authors+=[Author])*) "}"
		public Group getGroup() { return cGroup; }

		//"book"
		public Keyword getBookKeyword_0() { return cBookKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"title" title=STRING ("page" pages=INT)? ("category" category=BookCategory)? ("author" authors+=[Author])*
		public Group getGroup_3() { return cGroup_3; }

		//"title"
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }

		//title=STRING
		public Assignment getTitleAssignment_3_1() { return cTitleAssignment_3_1; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_3_1_0() { return cTitleSTRINGTerminalRuleCall_3_1_0; }

		//("page" pages=INT)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"page"
		public Keyword getPageKeyword_3_2_0() { return cPageKeyword_3_2_0; }

		//pages=INT
		public Assignment getPagesAssignment_3_2_1() { return cPagesAssignment_3_2_1; }

		//INT
		public RuleCall getPagesINTTerminalRuleCall_3_2_1_0() { return cPagesINTTerminalRuleCall_3_2_1_0; }

		//("category" category=BookCategory)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"category"
		public Keyword getCategoryKeyword_3_3_0() { return cCategoryKeyword_3_3_0; }

		//category=BookCategory
		public Assignment getCategoryAssignment_3_3_1() { return cCategoryAssignment_3_3_1; }

		//BookCategory
		public RuleCall getCategoryBookCategoryEnumRuleCall_3_3_1_0() { return cCategoryBookCategoryEnumRuleCall_3_3_1_0; }

		//("author" authors+=[Author])*
		public Group getGroup_3_4() { return cGroup_3_4; }

		//"author"
		public Keyword getAuthorKeyword_3_4_0() { return cAuthorKeyword_3_4_0; }

		//authors+=[Author]
		public Assignment getAuthorsAssignment_3_4_1() { return cAuthorsAssignment_3_4_1; }

		//[Author]
		public CrossReference getAuthorsAuthorCrossReference_3_4_1_0() { return cAuthorsAuthorCrossReference_3_4_1_0; }

		//ID
		public RuleCall getAuthorsAuthorIDTerminalRuleCall_3_4_1_0_1() { return cAuthorsAuthorIDTerminalRuleCall_3_4_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	public class BookCategoryElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "BookCategory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBiographyEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBiographyBiographyKeyword_0_0 = (Keyword)cBiographyEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMysteryEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMysteryMysteryKeyword_1_0 = (Keyword)cMysteryEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cScienceFictionEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cScienceFictionScienceFictionKeyword_2_0 = (Keyword)cScienceFictionEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum BookCategory:
		//	Biography | Mystery | ScienceFiction;
		public EnumRule getRule() { return rule; }

		//Biography | Mystery | ScienceFiction
		public Alternatives getAlternatives() { return cAlternatives; }

		//Biography
		public EnumLiteralDeclaration getBiographyEnumLiteralDeclaration_0() { return cBiographyEnumLiteralDeclaration_0; }

		//"Biography"
		public Keyword getBiographyBiographyKeyword_0_0() { return cBiographyBiographyKeyword_0_0; }

		//Mystery
		public EnumLiteralDeclaration getMysteryEnumLiteralDeclaration_1() { return cMysteryEnumLiteralDeclaration_1; }

		//"Mystery"
		public Keyword getMysteryMysteryKeyword_1_0() { return cMysteryMysteryKeyword_1_0; }

		//ScienceFiction
		public EnumLiteralDeclaration getScienceFictionEnumLiteralDeclaration_2() { return cScienceFictionEnumLiteralDeclaration_2; }

		//"ScienceFiction"
		public Keyword getScienceFictionScienceFictionKeyword_2_0() { return cScienceFictionScienceFictionKeyword_2_0; }
	}
	
	private final DomainModelElements pDomainModel;
	private final ModelElementElements pModelElement;
	private final LibraryElements pLibrary;
	private final AuthorElements pAuthor;
	private final BookElements pBook;
	private final BookCategoryElements unknownRuleBookCategory;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainModel = new DomainModelElements();
		this.pModelElement = new ModelElementElements();
		this.pLibrary = new LibraryElements();
		this.pAuthor = new AuthorElements();
		this.pBook = new BookElements();
		this.unknownRuleBookCategory = new BookCategoryElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DomainModel:
	//	elements+=ModelElement*;
	public DomainModelElements getDomainModelAccess() {
		return pDomainModel;
	}
	
	public ParserRule getDomainModelRule() {
		return getDomainModelAccess().getRule();
	}

	//ModelElement:
	//	Library | Author | Book;
	public ModelElementElements getModelElementAccess() {
		return pModelElement;
	}
	
	public ParserRule getModelElementRule() {
		return getModelElementAccess().getRule();
	}

	//Library:
	//	"library" name=ID "{" (("book" books+=[Book])* ("author" authors+=[Author])*) "}";
	public LibraryElements getLibraryAccess() {
		return pLibrary;
	}
	
	public ParserRule getLibraryRule() {
		return getLibraryAccess().getRule();
	}

	//Author:
	//	"author" name=ID "{" ("name" fullName=STRING ("book" books+=[Book])*) "}";
	public AuthorElements getAuthorAccess() {
		return pAuthor;
	}
	
	public ParserRule getAuthorRule() {
		return getAuthorAccess().getRule();
	}

	//Book:
	//	"book" name=ID "{" ("title" title=STRING ("page" pages=INT)? ("category" category=BookCategory)? ("author"
	//	authors+=[Author])*) "}";
	public BookElements getBookAccess() {
		return pBook;
	}
	
	public ParserRule getBookRule() {
		return getBookAccess().getRule();
	}

	//enum BookCategory:
	//	Biography | Mystery | ScienceFiction;
	public BookCategoryElements getBookCategoryAccess() {
		return unknownRuleBookCategory;
	}
	
	public EnumRule getBookCategoryRule() {
		return getBookCategoryAccess().getRule();
	}

	//terminal ID returns ecore::EString:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING returns ecore::EString:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT returns ecore::EString:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT returns ecore::EString:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS returns ecore::EString:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER returns ecore::EString:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
