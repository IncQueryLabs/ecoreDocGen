/*
 * generated by Xtext
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DomainModel";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDomainModel
entryRuleDomainModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDomainModelRule()); }
	 iv_ruleDomainModel=ruleDomainModel 
	 { $current=$iv_ruleDomainModel.current; } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDomainModelAccess().getElementsModelElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleModelElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"ModelElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelElementRule()); }
	 iv_ruleModelElement=ruleModelElement 
	 { $current=$iv_ruleModelElement.current; } 
	 EOF 
;

// Rule ModelElement
ruleModelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getLibraryParserRuleCall_0()); 
    }
    this_Library_0=ruleLibrary
    { 
        $current = $this_Library_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getAuthorParserRuleCall_1()); 
    }
    this_Author_1=ruleAuthor
    { 
        $current = $this_Author_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getBookParserRuleCall_2()); 
    }
    this_Book_2=ruleBook
    { 
        $current = $this_Book_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLibrary
entryRuleLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLibraryRule()); }
	 iv_ruleLibrary=ruleLibrary 
	 { $current=$iv_ruleLibrary.current; } 
	 EOF 
;

// Rule Library
ruleLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='library' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLibraryAccess().getLibraryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLibraryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_2());
    }
((	otherlv_3='book' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLibraryAccess().getBookKeyword_3_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLibraryRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getLibraryAccess().getBooksBookCrossReference_3_0_1_0()); 
	}

)
))*(	otherlv_5='author' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLibraryAccess().getAuthorKeyword_3_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLibraryRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getLibraryAccess().getAuthorsAuthorCrossReference_3_1_1_0()); 
	}

)
))*)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAuthor
entryRuleAuthor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthorRule()); }
	 iv_ruleAuthor=ruleAuthor 
	 { $current=$iv_ruleAuthor.current; } 
	 EOF 
;

// Rule Author
ruleAuthor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='author' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAuthorAccess().getAuthorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAuthorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAuthorAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='name' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAuthorAccess().getNameKeyword_3_0());
    }
(
(
		lv_fullName_4_0=RULE_STRING
		{
			newLeafNode(lv_fullName_4_0, grammarAccess.getAuthorAccess().getFullNameSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fullName",
        		lv_fullName_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5='book' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAuthorAccess().getBookKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthorRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getAuthorAccess().getBooksBookCrossReference_3_2_1_0()); 
	}

)
))*)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAuthorAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBook
entryRuleBook returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBookRule()); }
	 iv_ruleBook=ruleBook 
	 { $current=$iv_ruleBook.current; } 
	 EOF 
;

// Rule Book
ruleBook returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='book' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBookAccess().getBookKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBookAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBookRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBookAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='title' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBookAccess().getTitleKeyword_3_0());
    }
(
(
		lv_title_4_0=RULE_STRING
		{
			newLeafNode(lv_title_4_0, grammarAccess.getBookAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBookRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5='page' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBookAccess().getPageKeyword_3_2_0());
    }
(
(
		lv_pages_6_0=RULE_INT
		{
			newLeafNode(lv_pages_6_0, grammarAccess.getBookAccess().getPagesINTTerminalRuleCall_3_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBookRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pages",
        		lv_pages_6_0, 
        		"INT");
	    }

)
))?(	otherlv_7='category' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBookAccess().getCategoryKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBookAccess().getCategoryBookCategoryEnumRuleCall_3_3_1_0()); 
	    }
		lv_category_8_0=ruleBookCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBookRule());
	        }
       		set(
       			$current, 
       			"category",
        		lv_category_8_0, 
        		"BookCategory");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='author' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBookAccess().getAuthorKeyword_3_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBookRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getBookAccess().getAuthorsAuthorCrossReference_3_4_1_0()); 
	}

)
))*)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBookAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Rule BookCategory
ruleBookCategory returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Biography' 
	{
        $current = grammarAccess.getBookCategoryAccess().getBiographyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBookCategoryAccess().getBiographyEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Mystery' 
	{
        $current = grammarAccess.getBookCategoryAccess().getMysteryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBookCategoryAccess().getMysteryEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='ScienceFiction' 
	{
        $current = grammarAccess.getBookCategoryAccess().getScienceFictionEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBookCategoryAccess().getScienceFictionEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


